/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagement;

import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author 1
 */
public class Paziresh extends javax.swing.JFrame {

    /**
     * Creates new form Paziresh
     */
    public Paziresh() throws FileNotFoundException {
        initComponents();
        this.setVisible(true);
        //this.read_data();
    }
    void read_data() throws FileNotFoundException
    {
        java.io.File f1=new java.io.File("Hospital.txt");
        java.util.Scanner sc=new java.util.Scanner(f1);
        String s1=sc.nextLine();
        String[] s2=s1.split("\t");
        HospitalManagement.hospital.EMERGENCY_ROOMS_CAPACITY=Integer.parseInt(s2[0]);
        HospitalManagement.hospital.ICU_ROOMS_CAPACITY=Integer.parseInt(s2[1]);
        int fid=0;
        while(sc.hasNextLine())
        {
            java.util.ArrayList<Room> rooms=new java.util.ArrayList<Room>();
            String ss=sc.nextLine();
            String[] ss2=ss.split("\t");
            int r1=Integer.parseInt(ss2[0]);
            int r2=Integer.parseInt(ss2[1]);
            int r3=Integer.parseInt(ss2[2]);
            int i=0;
            for(;i<r1;i++)
            {
                Room rr=new hospitalmanagement.Room(fid*100+i, RoomType.Emergency);
                rooms.add(rr);
                for(int j=0;j<HospitalManagement.hospital.EMERGENCY_ROOMS_CAPACITY;j++)
                {
                    Bed b=new hospitalmanagement.Bed(j,rr.Room_id,false);
                    rr.Beds.add(b);
                }
            }
            for(;i<r2;i++)
            {
                Room rr=new hospitalmanagement.Room(fid*100+i, RoomType.Strilized);
                rooms.add(rr);
                Bed b=new hospitalmanagement.Bed(0,rr.Room_id,false);
                rr.Beds.add(b);
            }
            for(;i<r3;i++)
            {
                Room rr=new hospitalmanagement.Room(fid*100+i, RoomType.ICU);
                rooms.add(rr);
                for(int j=0;j<HospitalManagement.hospital.ICU_ROOMS_CAPACITY;j++)
                {
                    Bed b=new hospitalmanagement.Bed(j,rr.Room_id,false);
                    rr.Beds.add(b);
                }
                
            }
            Floor f=new hospitalmanagement.Floor(fid,rooms);
            HospitalManagement.hospital.Floors.add(f);
            
        }
        sc.close();
        java.io.File f2=new java.io.File("Sicks.txt");
        java.util.Scanner sc2=new java.util.Scanner(f2);
        while(sc2.hasNextLine())
        {
            String sss=sc2.nextLine();
            //0 Name
            //1 Family
            //2 Gender
            //3 Enter Date_Year
            //4 Enter Date_Month
            //5 Enter Date_Day
            //6 Birth Date_Year
            //7 Birth Date_Month
            //8 Birth Date_Day
            //9 Room_id
            //10 bed_id
            String[] sssa=sss.split("\t");
            String name=sssa[0];
            String family=sssa[1];
            Gender g=Gender.Male;
            if(sssa[2]=="Male")
            {
                g=Gender.Male;
            }
            else if(sssa[2]=="Female")
            {
                g=Gender.Female;
            }
            
            Gender gender=g;
            int enter_date_year=Integer.parseInt(sssa[3]);
            int enter_date_month=Integer.parseInt(sssa[4]);
            int enter_date_day=Integer.parseInt(sssa[5]);
            int birth_date_year=Integer.parseInt(sssa[6]);
            int birth_date_month=Integer.parseInt(sssa[7]);
            int birth_date_day=Integer.parseInt(sssa[8]);
            int room_id=Integer.parseInt(sssa[9]);
            int bed_id=Integer.parseInt(sssa[10]);
            Date enter_date=new Date(enter_date_year,enter_date_month,enter_date_day);
            Date birth_date=new Date(birth_date_year,birth_date_month,birth_date_day);
            Sick sick=new hospitalmanagement.Sick(bed_id,room_id, name, family,g,enter_date,birth_date);
            HospitalManagement.hospital.Floors.get(room_id/100).Rooms.get(room_id%100).Beds.get(bed_id).Add_Sick(sick);            
        }
        sc2.close();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        b1.setText("بستری بیمار");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setLabel("لیست بیماران");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(144, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        try {
            // TODO add your handling code here:
            PazireshDialoge_Add pa=new PazireshDialoge_Add();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Paziresh.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_b1ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        try {
            // TODO add your handling code here:
            PazireshDialoge_Release pa=new PazireshDialoge_Release();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Paziresh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_b2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Paziresh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Paziresh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Paziresh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Paziresh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Paziresh().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Paziresh.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    // End of variables declaration//GEN-END:variables
}
